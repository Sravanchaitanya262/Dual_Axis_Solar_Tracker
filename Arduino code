#include <Servo.h>
//defining Servos
Servo servohori;
int servoh = 0;
int servohLimitHigh = 160;
int servohLimitLow = 20;
int maxIntensity;

Servo servoverti; 
int servov = 0; 
int servovLimitHigh = 160;
int servovLimitLow = 20;
//Assigning LDRs
int ldrtopl = 2; //top left LDR green
int ldrtopr = 1; //top right LDR yellow
int ldrbotl = 3; // bottom left LDR blue
int ldrbotr = 0; // bottom right LDR orange

 void setup () 
 {
  servohori.attach(10);
  servohori.write(0);
  servoverti.attach(9);
  servoverti.write(0);
  Serial.begin(9600);
  delay(500);
 }

void loop()
{
  servoh = servohori.read();
  servov = servoverti.read();
  //capturing analog values of each LDR
  int topl = analogRead(ldrtopl);
  int topr = analogRead(ldrtopr);
  int botl = analogRead(ldrbotl);
  int botr = analogRead(ldrbotr);
  Serial.print("Ilumination of Top Left Ldr is:\t");
  ilumination(topl);
  Serial.print("Ilumination of Top Right Ldr is:\t");
  ilumination(topr);
  Serial.print("Ilumination of Bottom Left Ldr is:\t");
  ilumination(botl);
  Serial.print("Ilumination of Bottom Right Ldr is:\t");
  ilumination(botr);
  // calculating average
  int avgtop = (topl + topr) / 2; //average of top LDRs
  int avgbot = (botl + botr) / 2; //average of bottom LDRs
  int avgleft = (topl + botl) / 2; //average of left LDRs
  int avgright = (topr + botr) / 2; //average of right LDRs
  Serial.print("Average of  Top  Ldr's is:\t");
  Serial.println(avgtop);
  Serial.print("Average of   Bottom Ldr's is:\t");
  Serial.println(avgbot);
  Serial.print("Average of   Left Ldr's is:\t");
  Serial.println(avgleft);
  Serial.print("Average of   Right Ldr's is:\t");
  Serial.println(avgright);


  if (avgtop < avgbot)
  {
    servoverti.write(servov +1);
    if (servov > servovLimitHigh) 
     { 
      servov = servovLimitHigh;
     }
    delay(10);
  }
  else if (avgbot < avgtop)
  {
    servoverti.write(servov -1);
    if (servov < servovLimitLow)
  {
    servov = servovLimitLow;
  }
    delay(10);
  }
  else 
  {
    servoverti.write(servov);
  }
  
  if (avgleft > avgright)
  {
    servohori.write(servoh +1);
    if (servoh > servohLimitHigh)
    {
    servoh = servohLimitHigh;
    }
    delay(10);
  }
  else if (avgright > avgleft)
  {
    servohori.write(servoh -1);
    if (servoh < servohLimitLow)
     {
     servoh = servohLimitLow;
     }
    delay(10);
  }
  else 
  {
    servohori.write(servoh);
  }
  delay(50);
  Serial.print("Vertical Servo Angle is:\t");
  Serial.println(servov);
  Serial.print("Horizontal Servo Angle is:\t");
  Serial.println(servoh);
  greatest(topl,topr,botl,botr);
}
void greatest(int a,int b, int c, int d)
  {
    int arr[4],i;
    arr[0]=a;
    arr[1]=b;
    arr[2]=c;
    arr[3]=d;
    int max = arr[0];
    for(i=0;i<4;i++)
     {
       if(max<arr[i])
         {
           max=arr[i];
          }
      }
      if(max > maxIntensity)
        {
          maxIntensity=max;
         }
       Serial.print("Maximum Intensity is:\t");
       Serial.println(maxIntensity);
       Serial.println("---------");
    }
void ilumination(int a)
     {
       float  lux,v0,b;
       b=a;
       v0= b*(5/1023.0);
       lux=2500*(1/v0);
       lux=lux-500;
       lux=lux/3.3;
       Serial.println(lux);
      }

// end 
